{"version":3,"sources":["template/Menu.jsx","template/PageHeader.jsx","store/actions/countryActions.js","components/Card.jsx","components/SearchForm.jsx","views/pages/Details.jsx","template/Homepage.jsx","template/Content.jsx","App.js","store/reducers/countryReducer.js","store/configureStore.js","index.js"],"names":["Menu","props","className","to","process","PageHeader","title","style","fontSize","subtitle","URL","search","text","sessionStorage","getItem","dispatch","fetch","method","headers","body","JSON","stringify","query","then","res","json","type","payload","data","Country","searchAll","getCountry","name","connect","state","countryName","country","bindActionCreators","onClick","dado","nome","setItem","addLocalStorage","data-testid","url","src","alt","capital","SearchForm","searchTerm","searchUpdated","bind","keyHandler","this","console","log","event","key","setState","filteredCountries","filter","toLowerCase","includes","role","placeholder","value","onKeyUp","onChange","e","target","map","Fragment","flag","svgFile","area","populacao","population","dominio","topLevelDomains","replaceCharacters","replaceAll","_id","Component","Details","listMap","alterarDados","handleInputChange","checked","nameCountry","alert","nomePais","list","parse","id","aria-hidden","window","location","href","querySelected","Homepage","Content","exact","path","App","INITIAL_STATE","textInput","countryReducer","action","devTools","__REDUX_DEVTOOLS_EXTENSION__","reducers","combineReducers","store","applyMiddleware","thunk","createStore","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c0fc44d.chunk.js","sourcesContent":["import '../css/Menu.css'\r\nimport React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Menu = props => (\r\n    <aside className=\"Menu\">\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <span>Menu <i className=\"fa fa-angle-down\"></i></span>\r\n                </li>\r\n                <li>\r\n                    <Link to={process.env.PUBLIC_URL}>Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={process.env.PUBLIC_URL + \"/dashboard\"}>Lista de pa√≠ses</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </aside>\r\n)\r\n\r\nexport default Menu","import React from 'react'\r\n\r\nconst PageHeader = props => (\r\n    <header className='page-header'>\r\n        <h1>{props.title} <small style={{ fontSize: \"50%\" }}>{props.subtitle}</small></h1>\r\n    </header>\r\n)\r\n\r\nexport default PageHeader","const URL = 'https://countries-274616.ew.r.appspot.com/'\r\n\r\n// export const changeInput = event => ({\r\n//     type: 'INPUTED',\r\n//     payload: event.target.value\r\n// })\r\n\r\nexport const search = () => { // para pesquisar tudo quando inicializar\r\n\r\n    const text = `( name: \"${sessionStorage.getItem('nome_pais')}\" )`\r\n\r\n    return dispatch => {\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                query: `\r\n                    query {\r\n                        Country${text} {\r\n                            _id\r\n                            name\r\n                            capital\r\n                            area\r\n                            convertedArea {\r\n                                unit\r\n                            }\r\n                            flag {\r\n                                country {\r\n                                    population\r\n                                    flag {\r\n                                        svgFile\r\n                                    }\r\n                                    topLevelDomains {\r\n                                        name\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => dispatch({ type: 'ONE_SEARCHED', payload: res.data.Country }))\r\n    }\r\n}\r\n\r\n\r\nexport const searchAll = () => { // para pesquisar tudo quando inicializar\r\n\r\n    return dispatch => {\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                query: `\r\n                    query {\r\n                        Country {\r\n                            _id\r\n                            name\r\n                            capital\r\n                            area\r\n                            convertedArea {\r\n                                unit\r\n                            }\r\n                            flag {\r\n                                country {\r\n                                    population\r\n                                    flag {\r\n                                        svgFile\r\n                                    }\r\n                                    topLevelDomains {\r\n                                        name\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => dispatch({ type: 'SEARCHED', payload: res.data.Country }))\r\n    }\r\n}\r\n\r\nexport const getCountry = name => { // pegar o nome do pa√≠s, para usar nos detalhes\r\n    return { type: 'CLICKED', payload: name }\r\n}\r\n","import React from 'react'\r\nimport '../css/Card.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getCountry } from '../store/actions/countryActions'\r\n\r\nconst Card = props => {\r\n\r\n    const addLocalStorage = dado => {\r\n        props.getCountry(dado)\r\n        const nome = \"name_\" + dado\r\n        sessionStorage.setItem(nome, dado)\r\n        sessionStorage.setItem('dados_country_'+nome, JSON.stringify(props))\r\n        sessionStorage.setItem('nome_pais', dado)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Card\" onClick={() => addLocalStorage(props.name)} data-testid=\"card_de_paises\">\r\n            <Link to={props.url}>\r\n                <img src={props.src} alt={props.name} />\r\n                <div className=\"name-country\">\r\n                    <span><strong>Nome do Pa√≠s:</strong> {props.name}</span>\r\n                    <span><strong>Capital:</strong> {props.capital}</span>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ countryName: state.country.countryName }) // \"query\" est√° vindo da store do arquivo reducers.js\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ getCountry }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card)","import React, { Component } from 'react'\r\nimport '../css/SearchForm.css'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { searchAll } from '../store/actions/countryActions'\r\nimport Card from './Card'\r\nimport '../css/Card.css'\r\nimport replaceCharacters from 'replace-special-characters'\r\nclass SearchForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            searchTerm: ''\r\n        }\r\n        this.searchUpdated = this.searchUpdated.bind(this)\r\n        this.keyHandler = this.keyHandler.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.searchAll()\r\n        console.log('Inicializando...')\r\n    }\r\n\r\n    keyHandler(event) {\r\n        if (event.key === 'Escape') {\r\n            this.setState({ searchTerm: \"\" })\r\n        }\r\n    }\r\n\r\n    searchUpdated(event) {\r\n        this.setState({ searchTerm: event })        \r\n    }\r\n\r\n    render() {\r\n        const filteredCountries = this.props.query.filter(country => {\r\n            return country.name.toLowerCase().includes(this.state.searchTerm.toLowerCase())\r\n        })\r\n\r\n        return (\r\n            <>\r\n                <div className=\"col-xs-12\">\r\n                    <div role='form' className='search-form form-group'>\r\n                        <input data-testid=\"form_search\" className=\"form-control input-form\" type=\"text\" placeholder=\"Buscar Pa√≠s\" value={this.state.searchTerm} onKeyUp={this.keyHandler} onChange={e => this.searchUpdated(e.target.value)} />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"Cards\">\r\n                    {filteredCountries.map(dado => {\r\n                        return (\r\n                            <React.Fragment key={dado._id}>\r\n                                <Card\r\n                                    key={dado._id}\r\n                                    src={dado.flag.country.flag.svgFile}\r\n                                    name={dado.name}\r\n                                    capital={dado.capital}\r\n                                    area={dado.area}\r\n                                    populacao={dado.flag.country.population}\r\n                                    dominio={dado.flag.country.topLevelDomains || []}\r\n                                    url={process.env.PUBLIC_URL + \"/details/\" + replaceCharacters(dado.name.replaceAll(\" \", \"-\").replaceAll(/[&\\\\#,+()$~%.'\":*?<>{}]/g, \"\"))}>\r\n                                </Card>\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ query: state.country.query })\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ searchAll }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../../css/Details.css'\r\nimport { search } from '../../store/actions/countryActions'\r\nimport { bindActionCreators } from 'redux'\r\nclass Details extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.listMap = this.listMap.bind(this)\r\n        this.alterarDados = this.alterarDados.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            capital: \"\",\r\n            area: \"\",\r\n            populacao: \"\",\r\n            dominio: [{name: \"\"}],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.search(sessionStorage.getItem('nome_pais'))\r\n        console.log('Inicializando detalhes...')\r\n    }    \r\n\r\n    handleInputChange(event) {\r\n        const target = event.target\r\n        const value = target.type === 'text' ? target.value : target.checked\r\n        const name = target.name\r\n\r\n        this.setState({           \r\n            [name]: name === 'dominio' ? [{name:value}] : value,\r\n        })\r\n    }\r\n\r\n    alterarDados(nameCountry) {        \r\n        if((this.state.capital && this.state.populacao && this.state.area && this.state.dominio) === \"\") {\r\n            alert('Preencha todos os campos')\r\n        } else {\r\n            sessionStorage.setItem('dados_country_name_alterado_' + nameCountry, JSON.stringify(this.state))\r\n            alert(\"altera√ß√µes feitas!\")\r\n        }\r\n    }\r\n\r\n    listMap() {\r\n        const nomePais = sessionStorage.getItem('nome_pais')\r\n        let list = sessionStorage.getItem('dados_country_name_alterado_' + nomePais) === null ? sessionStorage.getItem('dados_country_name_' + nomePais) : sessionStorage.getItem('dados_country_name_alterado_' + nomePais)\r\n        list = JSON.parse(list)\r\n        // console.log(sessionStorage.getItem('dados_country_name_alterado_' + nomePais))\r\n        // console.log(sessionStorage.getItem('dados_country_name_' + nomePais))\r\n        // return list.map(dado => {\r\n            // console.log(dado)\r\n            return (\r\n                <div id=\"details\">\r\n                    <div className=\"detail-country\">                        \r\n                        <img src={JSON.parse(sessionStorage.getItem('dados_country_name_' + sessionStorage.getItem('nome_pais'))).src} alt={list.name} />\r\n                        <div className=\"description\">\r\n                            <h2>{list.name}</h2>\r\n                            <p><strong>Capital:</strong> {this.state.capital === \"\" ? list.capital : this.state.capital}</p>\r\n                            <p><strong>Popula√ß√£o:</strong> {this.state.populacao === \"\" ? list.populacao : this.state.populacao}</p>\r\n                            <p><strong>√Årea:</strong> {this.state.area === \"\" ? list.area : this.state.area} mi2</p>\r\n                            <p><strong>Dom√≠nio de primeiro n√≠vel com c√≥digo de pa√≠s:</strong> {this.state.dominio[0].name === \"\" ? list.dominio[0].name : this.state.dominio[0].name }</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"alterar-form\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"info\"><i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Alterar informa√ß√µes do pa√≠s (campos obrigat√≥rios*)</div>\r\n                            <div className=\"inputs\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Capital*\" name=\"capital\" value={this.state.capital} onChange={this.handleInputChange} />\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Popula√ß√£o*\" name=\"populacao\" value={this.state.populacao} onChange={this.handleInputChange} />\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"√Årea*\" name=\"area\" value={this.state.area} onChange={this.handleInputChange} />\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Dom√≠nio de primeiro n√≠vel*\" name=\"dominio\" value={this.state.dominio[0].name} onChange={this.handleInputChange} />\r\n                            </div>\r\n                            <button className=\"btn btn-primary btn-alterar\" onClick={() => this.alterarDados(nomePais)}>Alterar dados</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        if (sessionStorage.getItem('nome_pais') !== null) { // Evita a tela de erro quando a sessionStorage est√° vazio.\r\n            return this.listMap()\r\n        } \r\n        else {\r\n            return window.location.href = process.env.PUBLIC_URL + \"/dashboard\"\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ( // pega o estado atual armazenado no objeto l√° no countryReducer.js\r\n    {\r\n        countryName: state.country.countryName,\r\n        querySelected: state.country.querySelected\r\n    }\r\n)\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ search }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Details)","import React from 'react'\r\nimport '../css/Homepage.css'\r\n\r\nconst Homepage = props => {\r\n    return (\r\n        <div className=\"homepage\">\r\n            <p>Ol√°, neste site mostraremos algumas informa√ß√µes sobre os <b>pa√≠ses</b> do mundo.</p>\r\n            <p>Acesse o <b>menu</b> ao lado para buscar informa√ß√µes b√°sicas dos pa√≠ses.</p>\r\n            <p>\r\n                <b>Reposit√≥rio no GitHub para mais informa√ß√µes do c√≥digo: </b>\r\n                <a href=\"https://github.com/vx-charles/teste-react-countries/\" target=\"_blank\">https://github.com/vx-charles/teste-react-countries/</a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage","import '../css/Content.css'\r\nimport React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport PageHeader from './PageHeader'\r\nimport SearchForm from '../components/SearchForm'\r\nimport Details from '../views/pages/Details'\r\nimport Homepage from './Homepage'\r\n\r\nconst Content = props => (\r\n    <main className=\"Content\">\r\n        <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL}>\r\n                <PageHeader title=\"Homepage - Lista de Pa√≠ses do Mundo\" />\r\n                <Homepage />\r\n            </Route>\r\n\r\n            <Route path={process.env.PUBLIC_URL + \"/dashboard\"}>\r\n                <PageHeader title=\"Dashboard\" subtitle=\"Lista de pa√≠ses\" />\r\n                <SearchForm />\r\n            </Route>\r\n\r\n            <Route path={process.env.PUBLIC_URL + \"/details\"}>\r\n                <PageHeader title=\"Detalhes do Pa√≠s\" />\r\n                <Details />\r\n            </Route>\r\n            \r\n            <Route path=\"*\">\r\n                <div><strong style={{ fontSize: \"24px\" }}>ERRO 404</strong></div>\r\n                <div>P√°gina n√£o encontrada!!!</div>\r\n            </Route>\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Content","import React from 'react'\n\n// CSS\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nimport Menu from './template/Menu'\nimport { BrowserRouter } from 'react-router-dom'\nimport Content from './template/Content'\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Menu />\n                <Content />\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default App\n","const INITIAL_STATE = { countryName: '', textInput: '', query: [], querySelected: [] }\r\n\r\nconst countryReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SEARCHED':\r\n            return { ...state, query: action.payload }\r\n        case 'ONE_SEARCHED':\r\n            return { ...state, querySelected: action.payload }\r\n        case 'CLICKED':\r\n            return { ...state, countryName: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default countryReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk' // usado para fun√ß√µes async nas actions quando for fazer o dispatch\r\nimport countryReducer from '../store/reducers/countryReducer'\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // usar o plugin Redux DevTools no Google Chrome.\r\n\r\nconst reducers = combineReducers({\r\n    country: countryReducer\r\n})\r\n\r\nconst store = applyMiddleware(thunk)(createStore)(reducers, devTools)\r\n\r\nfunction configureStore() {\r\n    return store\r\n}\r\n\r\nexport default configureStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\n// import { createStore, applyMiddleware } from 'redux'\n// import thunk from 'redux-thunk' // usado para fun√ß√µes async nas actions quando for fazer o dispatch\n// import reducers from './store/reducers/reducers'\n\n\n// const devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\n// const store = applyMiddleware(thunk)(createStore)(reducers, devTools)\n\n const store = configureStore()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}