{"version":3,"sources":["template/Menu.jsx","template/PageHeader.jsx","store/actions/countryActions.js","components/Card.jsx","components/SearchForm.jsx","views/pages/Details.jsx","template/Homepage.jsx","template/Content.jsx","App.js","reportWebVitals.js","store/reducers/countryReducer.js","store/reducers/reducers.js","index.js"],"names":["Menu","props","className","to","process","PageHeader","title","style","fontSize","subtitle","searchAll","dispatch","fetch","method","headers","body","JSON","stringify","query","then","res","json","type","payload","data","Country","getCountry","name","connect","state","countryName","country","bindActionCreators","onClick","dado","nome","localStorage","setItem","addLocalStorage","src","alt","capital","SearchForm","searchTerm","searchUpdated","bind","this","console","log","term","setState","filteredEmails","filter","createFilter","role","data-testid","onChange","placeholder","map","Fragment","flag","svgFile","area","populacao","population","dominio","topLevelDomains","_id","Component","Details","listMap","alterarDados","handleInputChange","imagem","event","target","value","checked","nameCountry","alert","list","getItem","parse","id","aria-hidden","window","location","href","Homepage","Content","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","textInput","countryReducer","action","rootReducer","combineReducers","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","thunk","multi","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2XAuBeA,EAlBF,SAAAC,GAAK,OACd,uBAAOC,UAAU,OAAjB,SACI,8BACI,+BACI,6BACI,yCAAW,mBAAGA,UAAU,0BAE5B,6BACI,cAAC,IAAD,CAAMC,GAAIC,yBAAV,oBAEJ,6BACI,cAAC,IAAD,CAAMD,GAAIC,mCAAV,0C,eCRLC,EANI,SAAAJ,GAAK,OACpB,wBAAQC,UAAU,cAAlB,SACI,+BAAKD,EAAMK,MAAX,IAAkB,uBAAOC,MAAO,CAAEC,SAAU,OAA1B,SAAoCP,EAAMQ,iB,+DCGvDC,EAAY,WAErB,OAAO,SAAAC,GACHC,MAVI,6CAUO,CACPC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,MAAM,w1BA0BbC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIT,EAAS,CAAEW,KAAM,WAAYC,QAASH,EAAII,KAAKC,eAIvDC,EAAa,SAAAC,GACtB,MAAO,CAAEL,KAAM,UAAWC,QAASI,I,iBCdxBC,G,MAAAA,aAHS,SAAAC,GAAK,MAAK,CAAEC,YAAaD,EAAME,QAAQD,gBACpC,SAAAnB,GAAQ,OAAIqB,YAAmB,CAAEN,cAAcf,KAE3DiB,EAzBF,SAAA3B,GAST,OACI,qBAAKC,UAAU,OAAO+B,QAAS,kBARX,SAAAC,GACpBjC,EAAMyB,WAAWQ,GACjB,IAAMC,EAAO,QAAUD,EACvBE,aAAaC,QAAQF,EAAMD,GAC3BE,aAAaC,QAAQ,iBAAiBF,EAAMnB,KAAKC,UAAUhB,IAItBqC,CAAgBrC,EAAM0B,OAA3D,SACI,eAAC,IAAD,CAAMxB,GAAIC,iCAAV,UACI,qBAAKmC,IAAKtC,EAAMsC,IAAKC,IAAKvC,EAAM0B,OAChC,sBAAKzB,UAAU,eAAf,UACI,iCAAM,2CAAN,IAA8BD,EAAM0B,QACpC,iCAAM,8CAAN,IAAiC1B,EAAMwC,uBCbrDC,E,kDACF,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IAED4B,MAAQ,CACTc,WAAY,IAEhB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBANN,E,qDASnB,WACIC,KAAK7C,MAAMS,YACXqC,QAAQC,IAAI,sB,2BAGhB,SAAcC,GACVH,KAAKI,SAAS,CAAEP,WAAYM,M,oBAGhC,WAEI,IACME,EAAiBL,KAAK7C,MAAMiB,MAAMkC,OAAOC,uBAAaP,KAAKjB,MAAMc,WAD/C,CAAC,UAGzB,OACI,qCACI,qBAAKzC,UAAU,YAAf,SACI,qBAAKoD,KAAK,OAAOpD,UAAU,yBAA3B,SACI,cAAC,IAAD,CACIqD,cAAY,aACZrD,UAAU,0BACVsD,SAAUV,KAAKF,cACfa,YAAY,uBAKxB,qBAAKvD,UAAU,QAAf,SACKiD,EAAeO,KAAI,SAAAxB,GAChB,OACI,cAAC,IAAMyB,SAAP,UACI,cAAC,EAAD,CAEIpB,IAAKL,EAAK0B,KAAK7B,QAAQ6B,KAAKC,QAC5BlC,KAAMO,EAAKP,KACXc,QAASP,EAAKO,QACdqB,KAAM5B,EAAK4B,KACXC,UAAW7B,EAAK0B,KAAK7B,QAAQiC,WAC7BC,QAAS/B,EAAK0B,KAAK7B,QAAQmC,iBAAmB,IANzChC,EAAKiC,MAFGjC,EAAKiC,iB,GAxC7BC,aA8DVxC,eAFS,SAAAC,GAAK,MAAK,CAAEX,MAAOW,EAAME,QAAQb,UAC9B,SAAAP,GAAQ,OAAIqB,YAAmB,CAAEtB,aAAaC,KAC1DiB,CAA6Cc,G,QCjEtD2B,G,wDACF,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IAEDqE,QAAU,EAAKA,QAAQzB,KAAb,gBACf,EAAK0B,aAAe,EAAKA,aAAa1B,KAAlB,gBACpB,EAAK2B,kBAAoB,EAAKA,kBAAkB3B,KAAvB,gBAEzB,EAAKhB,MAAQ,CACTY,QAAS,GACTsB,UAAW,GACXD,KAAM,GACNG,QAAS,CAAC,CAACtC,KAAM,KACjB8C,OAAQ,IAZG,E,qDAgBnB,WACI3B,KAAK7C,MAAMS,YACXqC,QAAQC,IAAI,+B,+BAGhB,SAAkB0B,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAwB,SAAhBD,EAAOrD,KAAkBqD,EAAOC,MAAQD,EAAOE,QACvDlD,EAAOgD,EAAOhD,KAEpBmB,KAAKI,SAAL,eACKvB,EAAgB,YAATA,EAAqB,CAAC,CAACA,KAAKiD,IAAUA,M,0BAItD,SAAaE,GACoF,MAAzFhC,KAAKjB,MAAMY,SAAWK,KAAKjB,MAAMkC,WAAajB,KAAKjB,MAAMiC,MAAQhB,KAAKjB,MAAMoC,SAC5Ec,MAAM,6BAEN3C,aAAaC,QAAQ,+BAAiCyC,EAAa9D,KAAKC,UAAU6B,KAAKjB,QACvFkD,MAAM,+B,qBAId,WAAW,IAAD,OAEFC,EAAyF,OAAlF5C,aAAa6C,QAAQ,+BAAiCnC,KAAK7C,MAAM6B,aAAwBM,aAAa6C,QAAQ,sBAAwBnC,KAAK7C,MAAM6B,aAAeM,aAAa6C,QAAQ,+BAAiCnC,KAAK7C,MAAM6B,aAKxO,OAJJkD,EAAOhE,KAAKkE,MAAMF,GAKV,sBAAKG,GAAG,UAAR,UACI,sBAAKjF,UAAU,iBAAf,UACI,qBAAKqC,IAAKvB,KAAKkE,MAAM9C,aAAa6C,QAAQ,sBAAwBnC,KAAK7C,MAAM6B,cAAcS,IAAKC,IAAKM,KAAK7C,MAAM6B,cAChH,sBAAK5B,UAAU,cAAf,UACI,6BAAK4C,KAAK7C,MAAM6B,cAChB,8BAAG,8CAAH,IAAqD,KAAvBgB,KAAKjB,MAAMY,QAAiBuC,EAAKvC,QAAUK,KAAKjB,MAAMY,WACpF,8BAAG,sDAAH,IAAyD,KAAzBK,KAAKjB,MAAMkC,UAAmBiB,EAAKjB,UAAYjB,KAAKjB,MAAMkC,aAC1F,8BAAG,8CAAH,IAA+C,KAApBjB,KAAKjB,MAAMiC,KAAckB,EAAKlB,KAAOhB,KAAKjB,MAAMiC,KAA3E,UACA,8BAAG,+FAAH,IAAkG,KAA/BhB,KAAKjB,MAAMoC,QAAQ,GAAGtC,KAAcqD,EAAKf,QAAQ,GAAGtC,KAAOmB,KAAKjB,MAAMoC,QAAQ,GAAGtC,cAI5J,qBAAKzB,UAAU,eAAf,SACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,OAAf,UAAsB,mBAAGA,UAAU,oBAAoBkF,cAAY,SAAnE,qEACA,sBAAKlF,UAAU,SAAf,UACI,uBAAOqD,cAAY,aAAajC,KAAK,OAAOpB,UAAU,eAAeuD,YAAY,WAAW9B,KAAK,UAAUiD,MAAO9B,KAAKjB,MAAMY,QAASe,SAAUV,KAAK0B,oBACrJ,uBAAOjB,cAAY,aAAajC,KAAK,OAAOpB,UAAU,eAAeuD,YAAY,mBAAa9B,KAAK,YAAYiD,MAAO9B,KAAKjB,MAAMkC,UAAWP,SAAUV,KAAK0B,oBAC3J,uBAAOjB,cAAY,aAAajC,KAAK,OAAOpB,UAAU,eAAeuD,YAAY,WAAQ9B,KAAK,OAAOiD,MAAO9B,KAAKjB,MAAMiC,KAAMN,SAAUV,KAAK0B,oBAC5I,uBAAOjB,cAAY,aAAajC,KAAK,OAAOpB,UAAU,eAAeuD,YAAY,mCAA6B9B,KAAK,UAAUiD,MAAO9B,KAAKjB,MAAMoC,QAAQ,GAAGtC,KAAM6B,SAAUV,KAAK0B,uBAEnL,wBAAQjB,cAAY,aAAarD,UAAU,8BAA8B+B,QAAS,kBAAM,EAAKsC,aAAa,EAAKtE,MAAM6B,cAArH,qC,oBAQxB,WACI,OAA+D,OAA3DM,aAAa6C,QAAQ,QAAUnC,KAAK7C,MAAM6B,aACnCgB,KAAKwB,UAELe,OAAOC,SAASC,KAAO,iB,GAlFpBnB,cA8FPxC,eAPS,SAAAC,GAAK,MAAM,CAE3BC,YAAaD,EAAME,QAAQD,gBAIR,SAAAnB,GAAQ,OAAIqB,YAAmB,CAAEtB,aAAaC,KAC1DiB,CAA6CyC,GCvF7CmB,G,MAVE,SAAAvF,GACb,OACI,sBAAKC,UAAU,WAAf,UACI,mGAA4D,0CAA5D,gBACA,mGACA,8BAAG,qCAAH,mEC0BGuF,EA1BC,SAAAxF,GAAK,OACjB,sBAAMC,UAAU,UAAhB,SACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAOwF,OAAK,EAACC,KAAMvF,yBAAnB,UACI,cAAC,EAAD,CAAYE,MAAM,2CAClB,cAAC,EAAD,OAGJ,eAAC,IAAD,CAAOqF,KAAMvF,mCAAb,UACI,cAAC,EAAD,CAAYE,MAAM,YAAYG,SAAS,uBACvC,cAAC,EAAD,OAGJ,eAAC,IAAD,CAAOkF,KAAMvF,iCAAb,UACI,cAAC,EAAD,CAAYE,MAAM,wBAClB,cAAC,EAAD,OAGJ,eAAC,IAAD,CAAOqF,KAAK,IAAZ,UACI,8BAAK,wBAAQpF,MAAO,CAAEC,SAAU,QAA3B,wBACL,0ECLDoF,MAXf,WACI,OACI,qBAAK1F,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,UCLD2F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iCCPRO,EAAgB,CAAEvE,YAAa,GAAIwE,UAAW,GAAIpF,MAAO,IAahDqF,EAXQ,WAAoC,IAAnC1E,EAAkC,uDAA1BwE,EAAeG,EAAW,uCACtD,OAAQA,EAAOlF,MACX,IAAK,WACD,OAAO,2BAAKO,GAAZ,IAAmBX,MAAOsF,EAAOjF,UACrC,IAAK,UACD,OAAO,2BAAKM,GAAZ,IAAmBC,YAAa0E,EAAOjF,UAC3C,QACI,OAAOM,ICFJ4E,EAJKC,YAAgB,CAChC3E,QAASwE,ICOPI,EAAWtB,OAAOuB,8BAAgCvB,OAAOuB,+BAEzDC,EAAQC,YAAgBC,IAAOC,IAAvBF,CAA8BG,IAA9BH,CAA2CI,EAAUP,GAEnEQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRS,SAASC,eAAe,SAM5B1B,M","file":"static/js/main.687c7bab.chunk.js","sourcesContent":["import '../css/Menu.css'\r\nimport React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Menu = props => (\r\n    <aside className=\"Menu\">\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <span>Menu <i className=\"fa fa-angle-down\"></i></span>\r\n                </li>\r\n                <li>\r\n                    <Link to={process.env.PUBLIC_URL}>Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={process.env.PUBLIC_URL + \"/dashboard\"}>Lista de países</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </aside>\r\n)\r\n\r\nexport default Menu","import React from 'react'\r\n\r\nconst PageHeader = props => (\r\n    <header className='page-header'>\r\n        <h1>{props.title} <small style={{ fontSize: \"50%\" }}>{props.subtitle}</small></h1>\r\n    </header>\r\n)\r\n\r\nexport default PageHeader","const URL = 'https://countries-274616.ew.r.appspot.com/'\r\n\r\n// export const changeInput = event => ({\r\n//     type: 'INPUTED',\r\n//     payload: event.target.value\r\n// })\r\n\r\nexport const searchAll = () => { // para pesquisar tudo quando inicializar\r\n\r\n    return dispatch => {\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                query: `\r\n                    query {\r\n                        Country {\r\n                            _id\r\n                            name\r\n                            capital\r\n                            area\r\n                            convertedArea {\r\n                                unit\r\n                            }\r\n                            flag {\r\n                                country {\r\n                                    population\r\n                                    flag {\r\n                                        svgFile\r\n                                    }\r\n                                    topLevelDomains {\r\n                                        name\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => dispatch({ type: 'SEARCHED', payload: res.data.Country }))\r\n    }\r\n}\r\n\r\nexport const getCountry = name => { // pegar o nome do país, para usar nos detalhes\r\n    return { type: 'CLICKED', payload: name }\r\n}\r\n","import React from 'react'\r\nimport '../css/Card.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getCountry } from '../store/actions/countryActions'\r\n\r\nconst Card = props => {\r\n\r\n    const addLocalStorage = dado => {\r\n        props.getCountry(dado)\r\n        const nome = \"name_\" + dado\r\n        localStorage.setItem(nome, dado)\r\n        localStorage.setItem('dados_country_'+nome, JSON.stringify(props))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Card\" onClick={() => addLocalStorage(props.name)}>\r\n            <Link to={process.env.PUBLIC_URL + \"/details\"}>\r\n                <img src={props.src} alt={props.name} />\r\n                <div className=\"name-country\">\r\n                    <span><strong>Nome:</strong> {props.name}</span>\r\n                    <span><strong>Capital:</strong> {props.capital}</span>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ countryName: state.country.countryName }) // \"query\" está vindo da store do arquivo reducers.js\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ getCountry }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card)","import React, { Component } from 'react'\r\nimport '../css/SearchForm.css'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { searchAll } from '../store/actions/countryActions'\r\nimport SearchInput, { createFilter } from 'react-search-input'\r\nimport Card from './Card'\r\nimport '../css/Card.css'\r\n\r\nclass SearchForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            searchTerm: ''\r\n        }\r\n        this.searchUpdated = this.searchUpdated.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.searchAll()\r\n        console.log('Inicializando...')\r\n    }\r\n\r\n    searchUpdated(term) {\r\n        this.setState({ searchTerm: term })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const KEYS_TO_FILTERS = ['name']\r\n        const filteredEmails = this.props.query.filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS))\r\n\r\n        return (\r\n            <>\r\n                <div className=\"col-xs-12\">\r\n                    <div role='form' className='search-form form-group'>\r\n                        <SearchInput\r\n                            data-testid=\"form-field\"\r\n                            className=\"form-control input-form\"\r\n                            onChange={this.searchUpdated}\r\n                            placeholder=\"Buscar País\" \r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"Cards\">\r\n                    {filteredEmails.map(dado => {\r\n                        return (\r\n                            <React.Fragment key={dado._id}>\r\n                                <Card\r\n                                    key={dado._id}\r\n                                    src={dado.flag.country.flag.svgFile}\r\n                                    name={dado.name}\r\n                                    capital={dado.capital}\r\n                                    area={dado.area}\r\n                                    populacao={dado.flag.country.population}\r\n                                    dominio={dado.flag.country.topLevelDomains || []}>\r\n                                </Card>\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </div>            \r\n            </>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ query: state.country.query  })\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ searchAll }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../../css/Details.css'\r\nimport { searchAll } from '../../store/actions/countryActions'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Details extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.listMap = this.listMap.bind(this)\r\n        this.alterarDados = this.alterarDados.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n\r\n        this.state = {\r\n            capital: \"\",\r\n            populacao: \"\",\r\n            area: \"\",\r\n            dominio: [{name: \"\"}],\r\n            imagem: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.searchAll()\r\n        console.log('Inicializando detalhes...')\r\n    }    \r\n\r\n    handleInputChange(event) {\r\n        const target = event.target\r\n        const value = target.type === 'text' ? target.value : target.checked\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: name === 'dominio' ? [{name:value}] : value,\r\n        })\r\n    }\r\n\r\n    alterarDados(nameCountry) {        \r\n        if((this.state.capital && this.state.populacao && this.state.area && this.state.dominio) === \"\") {\r\n            alert('Preencha todos os campos')\r\n        } else {\r\n            localStorage.setItem('dados_country_name_alterado_' + nameCountry, JSON.stringify(this.state))\r\n            alert(\"alterações feitas!\")\r\n        }\r\n    }\r\n\r\n    listMap() {\r\n\r\n        let list = localStorage.getItem('dados_country_name_alterado_' + this.props.countryName) === null ? localStorage.getItem('dados_country_name_' + this.props.countryName) : localStorage.getItem('dados_country_name_alterado_' + this.props.countryName)\r\n        list = JSON.parse(list)\r\n        // console.log(list)\r\n\r\n        // return list.map((dado, index) => {\r\n            return (\r\n                <div id=\"details\">\r\n                    <div className=\"detail-country\">\r\n                        <img src={JSON.parse(localStorage.getItem('dados_country_name_' + this.props.countryName)).src} alt={this.props.countryName} />\r\n                        <div className=\"description\">\r\n                            <h2>{this.props.countryName}</h2>\r\n                            <p><strong>Capital:</strong> {this.state.capital === \"\" ? list.capital : this.state.capital}</p>\r\n                            <p><strong>População:</strong> {this.state.populacao === \"\" ? list.populacao : this.state.populacao}</p>\r\n                            <p><strong>Área:</strong> {this.state.area === \"\" ? list.area : this.state.area} mi2</p>                            \r\n                            <p><strong>Domínio de primeiro nível com código de país:</strong> {this.state.dominio[0].name === \"\" ? list.dominio[0].name : this.state.dominio[0].name }</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"alterar-form\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"info\"><i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Alterar informações do país (campos obrigatórios*)</div>\r\n                            <div className=\"inputs\">\r\n                                <input data-testid=\"form-field\" type=\"text\" className=\"form-control\" placeholder=\"Capital*\" name=\"capital\" value={this.state.capital} onChange={this.handleInputChange} />\r\n                                <input data-testid=\"form-field\" type=\"text\" className=\"form-control\" placeholder=\"População*\" name=\"populacao\" value={this.state.populacao} onChange={this.handleInputChange} />\r\n                                <input data-testid=\"form-field\" type=\"text\" className=\"form-control\" placeholder=\"Área*\" name=\"area\" value={this.state.area} onChange={this.handleInputChange} />\r\n                                <input data-testid=\"form-field\" type=\"text\" className=\"form-control\" placeholder=\"Domínio de primeiro nível*\" name=\"dominio\" value={this.state.dominio[0].name} onChange={this.handleInputChange} />\r\n                            </div>\r\n                            <button data-testid=\"form-field\" className=\"btn btn-primary btn-alterar\" onClick={() => this.alterarDados(this.props.countryName)}>Alterar dados</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        if (localStorage.getItem('name_' + this.props.countryName) !== null) {\r\n            return this.listMap()\r\n        } else {\r\n            return window.location.href = \"/dashboard\"\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ( // pega o estado atual armazenado no objeto lá no countryReducer.js\r\n    {\r\n        countryName: state.country.countryName,\r\n        // query: state.country.query\r\n    }\r\n)\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ searchAll }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Details)","import React from 'react'\r\nimport '../css/Homepage.css'\r\n\r\nconst Homepage = props => {\r\n    return (\r\n        <div className=\"homepage\">\r\n            <p>Olá, neste site mostraremos algumas informações sobre os <b>países</b> do mundo.</p>\r\n            <p>Acesso o menu ao lado para buscar informações dos países.</p>\r\n            <p><b>OBS:</b> Desculpe-nos, o site ainda está em construção.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage","import '../css/Content.css'\r\nimport React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport PageHeader from './PageHeader'\r\nimport SearchForm from '../components/SearchForm'\r\nimport Details from '../views/pages/Details'\r\nimport Homepage from './Homepage'\r\n\r\nconst Content = props => (\r\n    <main className=\"Content\">\r\n        <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL}>\r\n                <PageHeader title=\"Homepage - Lista de Países do Mundo\" />\r\n                <Homepage />\r\n            </Route>\r\n\r\n            <Route path={process.env.PUBLIC_URL + \"/dashboard\"}>\r\n                <PageHeader title=\"Dashboard\" subtitle=\"Lista de países\" />\r\n                <SearchForm />\r\n            </Route>\r\n\r\n            <Route path={process.env.PUBLIC_URL + \"/details\"}>\r\n                <PageHeader title=\"Detalhes do País\" />\r\n                <Details />\r\n            </Route>\r\n            \r\n            <Route path=\"*\">\r\n                <div><strong style={{ fontSize: \"24px\" }}>ERRO 404</strong></div>\r\n                <div>Página não encontrada!!!</div>\r\n            </Route>\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Content","import React from 'react'\n\n// CSS\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nimport Menu from './template/Menu'\nimport { BrowserRouter } from 'react-router-dom'\nimport Content from './template/Content'\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Menu />\n                <Content />\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = { countryName: '', textInput: '', query: [] }\r\n\r\nconst countryReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SEARCHED':\r\n            return { ...state, query: action.payload }        \r\n        case 'CLICKED':\r\n            return { ...state, countryName: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default countryReducer","import { combineReducers } from 'redux'\r\nimport countryReducer from './countryReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    country: countryReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport multi from 'redux-multi'\nimport reducers from './store/reducers/reducers'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst store = applyMiddleware(thunk, multi)(createStore)(reducers, devTools)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}